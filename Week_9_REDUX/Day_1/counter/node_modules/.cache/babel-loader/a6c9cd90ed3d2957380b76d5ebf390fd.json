{"ast":null,"code":"const reducer = (state, action) => {\n  //list of days\n  let week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]; //action.day is the payload from the actions folder\n\n  let currentDay = week.indexOf(action.day); //set this variable for later\n\n  let chosenDay;\n\n  switch (action.type) {\n    //if we want to get the next day\n    case \"FORWARD_DAY\":\n      //some logic about the array above\n      if (currentDay == week.length - 1) {\n        chosenDay = week[0];\n      } else {\n        chosenDay = week[currentDay + 1];\n      }\n\n      return { ...state,\n        //copying the original state\n        weekday: chosenDay //update the weekday key from the state\n\n      };\n    //if we want to get the previous day\n\n    case \"BACKWARD_DAY\":\n      //some logic about the array above\n      if (currentDay == 0) {\n        chosenDay = week[week.length - 1];\n      } else {\n        chosenDay = week[currentDay - 1];\n      }\n\n      return { ...state,\n        //copying the original state\n        weekday: chosenDay //update weekday key from the state\n\n      };\n\n    default:\n      return state;\n    //Otherwise, return the existing state unchanged\n  }\n};\n\nexport { reducer };","map":{"version":3,"names":["reducer","state","action","week","currentDay","indexOf","day","chosenDay","type","length","weekday"],"sources":["/home/oliver/Desktop/JS_Bootcamp/Week_9_REDUX/Day_1/Weekly_app/weeklyapp/src/reducers/index.js"],"sourcesContent":["const reducer = (state, action) => {\n    //list of days\n    let week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n    //action.day is the payload from the actions folder\n    let currentDay = week.indexOf(action.day)\n\n    //set this variable for later\n    let chosenDay;\n\n    switch (action.type) {\n\n        //if we want to get the next day\n        case \"FORWARD_DAY\":\n            //some logic about the array above\n            if (currentDay == week.length - 1) {\n                chosenDay = week[0]\n            } else {\n                chosenDay = week[currentDay + 1]\n            }\n\n            return {\n                ...state, //copying the original state\n                weekday: chosenDay, //update the weekday key from the state\n            }\n\n        //if we want to get the previous day\n        case \"BACKWARD_DAY\":\n            //some logic about the array above\n            if (currentDay == 0) {\n                chosenDay = week[week.length - 1]\n            } else {\n                chosenDay = week[currentDay - 1]\n            }\n\n            return {\n                ...state, //copying the original state\n                weekday: chosenDay, //update weekday key from the state\n            }\n        default:\n            return state; //Otherwise, return the existing state unchanged\n    }\n}\n\nexport { reducer };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC/B;EACA,IAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,EAAyD,UAAzD,EAAqE,QAArE,CAAX,CAF+B,CAI/B;;EACA,IAAIC,UAAU,GAAGD,IAAI,CAACE,OAAL,CAAaH,MAAM,CAACI,GAApB,CAAjB,CAL+B,CAO/B;;EACA,IAAIC,SAAJ;;EAEA,QAAQL,MAAM,CAACM,IAAf;IAEI;IACA,KAAK,aAAL;MACI;MACA,IAAIJ,UAAU,IAAID,IAAI,CAACM,MAAL,GAAc,CAAhC,EAAmC;QAC/BF,SAAS,GAAGJ,IAAI,CAAC,CAAD,CAAhB;MACH,CAFD,MAEO;QACHI,SAAS,GAAGJ,IAAI,CAACC,UAAU,GAAG,CAAd,CAAhB;MACH;;MAED,OAAO,EACH,GAAGH,KADA;QACO;QACVS,OAAO,EAAEH,SAFN,CAEiB;;MAFjB,CAAP;IAKJ;;IACA,KAAK,cAAL;MACI;MACA,IAAIH,UAAU,IAAI,CAAlB,EAAqB;QACjBG,SAAS,GAAGJ,IAAI,CAACA,IAAI,CAACM,MAAL,GAAc,CAAf,CAAhB;MACH,CAFD,MAEO;QACHF,SAAS,GAAGJ,IAAI,CAACC,UAAU,GAAG,CAAd,CAAhB;MACH;;MAED,OAAO,EACH,GAAGH,KADA;QACO;QACVS,OAAO,EAAEH,SAFN,CAEiB;;MAFjB,CAAP;;IAIJ;MACI,OAAON,KAAP;IAAc;EA9BtB;AAgCH,CA1CD;;AA4CA,SAASD,OAAT"},"metadata":{},"sourceType":"module"}